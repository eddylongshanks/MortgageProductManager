// <auto-generated>
// This code was generated by a kontent-generators-net tool
// (see https://github.com/kontent-ai/model-generator-net).
//
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// For further modifications of the class, create a separate file with the partial class.
// </auto-generated>

using Kontent.Ai.Management.Models.LanguageVariants.Elements;
using Kontent.Ai.Management.Models.Shared;
using MortgageManager.Entities.Models;

namespace MortgageManager.CMS.Models
{
    public class ProductMortgage : IProductMortgage
    {
        public const string CashbackAmountCodename = "cashback_amount";
        public const string ClientTypeCodename = "client_type";
        public const string CompletionFeeCodename = "completion_fee";
        public const string DailyInterestCalculationCodename = "daily_interest_calculation";
        public const string DealTermCodename = "deal_term";
        public const string DetailsPageCodename = "details_page";
        public const string DocumentsCodename = "documents";
        public const string EarlyRepaymentChargeCodename = "early_repayment_charge";
        public const string FeesCodename = "fees";
        public const string FullDescriptionCodename = "full_description";
        public const string HeadingCodename = "heading";
        public const string IllustrationCodename = "illustration";
        public const string IncentiveOptionsCodename = "incentive_options";
        public const string IncentivesCodename = "incentives";
        public const string InterestRatesCodename = "interest_rates";
        public const string KeyFeaturesCodename = "key_features";
        public const string LoanAmountCodename = "loan_amount";
        public const string MaturityDateCodename = "maturity_date";
        public const string MaximumLtvCodename = "maximum_ltv____";
        public const string MinimumTermCodename = "minimum_term";
        public const string MortgageTypeCodename = "mortgage_type";
        public const string MortgageTypesCodename = "mortgage_types";
        public const string ReservationFeeCodename = "reservation_fee";
        public const string TermsAndConditionsCodename = "terms_and_conditions";
        public string ComparisonCostCodename => "comparison_cost";
        public string InitialInterestRateCodename => "initial_interest_rate";
        public string StandardVariableRateCodename => "standard_variable_rate";
        public string NameCodename => "name";
        public string ProductCodeCodename => "product_code";

        //public decimal? CashbackAmount { get; set; }
        //public IEnumerable<IMultipleChoiceOption> ClientType { get; set; }
        //public string ComparisonCost { get; set; }
        //public IRichTextContent CompletionFee { get; set; }
        //public IRichTextContent DailyInterestCalculation { get; set; }
        //public IEnumerable<IMultipleChoiceOption> DealTerm { get; set; }
        //public IEnumerable<object> DetailsPage { get; set; }
        //public IEnumerable<IAsset> Documents { get; set; }
        //public IRichTextContent EarlyRepaymentCharge { get; set; }
        //public string Fees { get; set; }
        //public IRichTextContent FullDescription { get; set; }
        //public string Heading { get; set; }
        //public string Illustration { get; set; }
        //public IEnumerable<IMultipleChoiceOption> IncentiveOptions { get; set; }
        //public IRichTextContent Incentives { get; set; }
        //public string InitialInterestRate { get; set; }
        //public IRichTextContent InterestRates { get; set; }
        //public string KeyFeatures { get; set; }
        //public IRichTextContent LoanAmount { get; set; }
        //public DateTime? MaturityDate { get; set; }
        //public string MaximumLtv { get; set; }
        //public IRichTextContent MinimumTerm { get; set; }
        //public IEnumerable<IMultipleChoiceOption> MortgageType { get; set; }
        //public IEnumerable<ITaxonomyTerm> MortgageTypes { get; set; }
        //public IRichTextContent ReservationFee { get; set; }
        //public string StandardVariableRate { get; set; }
        //public IContentItemSystemAttributes System { get; set; }
        //public IEnumerable<IAsset> TermsAndConditions { get; set; }

        public string Codename => Name?.Replace(" ", "_").Replace("-", "_").Replace(".", "_").ToLower();
        public string PageCodename => $"page_{Codename}";
        public string Name { get; set; }
        public string ProductCode { get; set; }
        public string ComparisonCost { get; set; }
        public string InitialInterestRate { get; set; }
        public string StandardVariableRate { get; set; }

        public TextElement GetTextElementFor(string propertyIdentifier)
        {
            var property = typeof(ProductMortgage).GetProperty(propertyIdentifier);
            string prop = $"{propertyIdentifier}Codename";
            var propertyCodename = typeof(ProductMortgage).GetProperty(prop);

            if (property == null || propertyCodename == null)
            {
                throw new ArgumentException($"Property '{propertyIdentifier}' not found on type '{typeof(ProductMortgage).Name}'.");
            }

            return new TextElement()
            {
                Element = Reference.ByCodename(propertyCodename.GetValue(this).ToString()),
                Value = property.GetValue(this).ToString(),
            };
        }

        //public TextElement GetProductCodeTextElement()
        //{
        //    return new TextElement()
        //    {
        //        Element = Reference.ByCodename(ProductCodeCodename),
        //        Value = ProductCode
        //    };
        //}

        //public TextElement GetProductNameTextElement()
        //{
        //    return new TextElement()
        //    {
        //        Element = Reference.ByCodename(NameCodename),
        //        Value = Name
        //    };
        //}

    }
}